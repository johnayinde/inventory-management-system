// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BusinessType {
  PERSONAL
  PARTNERSHIP
}

enum StatusType {
  online
  offline
}

enum PricingType {
  bulk
  individual
}

enum ExpenseType {
  product
  general
}

enum ProductStatusType {
  in_stock
  running_low
  sold_out
}

model Auth {
  id           Int     @id @default(autoincrement())
  first_name   String?
  last_name    String?
  email        String  @unique
  phone_number String? @unique
  password     String?
  isOauthUser  Boolean @default(false)
  isUser       Boolean @default(false)

  //
  deleted        Boolean   @default(false)
  email_verified Boolean?  @default(false)
  created_at     DateTime  @default(now()) @db.Timestamptz(3)
  updated_at     DateTime? @updatedAt
}

model Tenant {
  id    Int     @id @default(autoincrement())
  email String?

  business           Business?
  category           Category[]
  users              User[]
  products           Product[]
  expense_categories ExpenseCategory[]
  expenses           Expense[]

  //
  deleted    Boolean     @default(false)
  created_at DateTime    @default(now()) @db.Timestamptz(3)
  updated_at DateTime?   @updatedAt
  Inventory  Inventory[]
  Customer   Customer[]
}

model Business {
  id               Int           @id @default(autoincrement())
  tenant           Tenant        @relation(fields: [tenant_id], references: [id])
  tenant_id        Int           @unique
  business_name    String?
  business_type    BusinessType?
  business_address String?
  country          String?

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Category {
  id             Int           @id @default(autoincrement())
  tenant         Tenant        @relation(fields: [tenant_id], references: [id])
  tenant_id      Int
  name           String
  description    String?
  sub_categories Subcategory[]
  products       Product[]

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Subcategory {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model User {
  id           Int        @id @default(autoincrement())
  name         String
  email        String
  last_login   DateTime?  @default(now())
  status       StatusType @default(offline)
  is_suspended Boolean    @default(false)
  is_revoked   Boolean    @default(false)

  tenant_id  Int
  tenant     Tenant      @relation(fields: [tenant_id], references: [id])
  permission Permission?

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Permission {
  id Int @id @default(autoincrement())

  dashboard Boolean @default(false)
  inventory Boolean @default(false)
  sales     Boolean @default(false)
  expenses  Boolean @default(false)
  report    Boolean @default(false)
  customers Boolean @default(false)
  tenant_id Int
  userId    Int     @unique
  user_id   User    @relation(fields: [userId], references: [id])

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  categories  Category[]
  tenant_id   Int
  tenant      Tenant     @relation(fields: [tenant_id], references: [id])
  Expense     Expense[]

  quantity      Int?
  price         String?
  bulk_price    String?
  note          String?
  attachments   String[]
  serial_number String?
  status        ProductStatusType @default(in_stock)

  //
  deleted     Boolean    @default(false)
  created_at  DateTime   @default(now()) @db.Timestamptz(3)
  updated_at  DateTime?  @updatedAt
  Inventory   Inventory? @relation(fields: [inventoryId], references: [id])
  inventoryId Int?
}

model ExpenseCategory {
  id          Int     @id @default(autoincrement())
  tenant      Tenant  @relation(fields: [tenant_id], references: [id])
  tenant_id   Int
  name        String
  description String?

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
  expenses   Expense[]

  @@map("expense_category")
}

model Expense {
  id                 Int              @id @default(autoincrement())
  tenant             Tenant           @relation(fields: [tenant_id], references: [id])
  tenant_id          Int
  name               String
  description        String?
  amount             String
  date               DateTime
  type               ExpenseType      @default(general)
  attachment         String?
  expense_categoryId Int?
  category           ExpenseCategory? @relation(fields: [expense_categoryId], references: [id])
  product            Product?         @relation(fields: [productId], references: [id])
  productId          Int?

  //
  deleted     Boolean    @default(false)
  created_at  DateTime   @default(now()) @db.Timestamptz(3)
  updated_at  DateTime?  @updatedAt
  Inventory   Inventory? @relation(fields: [inventoryId], references: [id])
  inventoryId Int?
}

model Inventory {
  id             Int         @id @default(autoincrement())
  shipping_name  String
  date           DateTime?
  attachments    String[]
  cost_price     String
  expected_price String
  note           String?
  quantity       Int
  pricing_type   PricingType @default(individual)
  bulk_price     String?
  tenant         Tenant      @relation(fields: [tenant_id], references: [id])
  tenant_id      Int
  products       Product[]
  expenses       Expense[]

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Customer {
  id           Int    @id @default(autoincrement())
  name         String
  phone_number String
  email        String
  address      String

  tenant_id Int
  tenant    Tenant @relation(fields: [tenant_id], references: [id])

  //
  deleted    Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}
