// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BusinessType {
  PERSONAL
  PARTNERSHIP
}

model Auth {
  id           Int     @id @default(autoincrement())
  first_name   String?
  last_name    String?
  email        String  @unique
  phone_number String? @unique
  password     String?
  isOauthUser  Boolean @default(false)
  isUser       Boolean @default(false)

  //
  is_active      Boolean   @default(false)
  email_verified Boolean?  @default(false)
  created_at     DateTime  @default(now()) @db.Timestamptz(3)
  updated_at     DateTime? @updatedAt
}

model Tenant {
  id    Int     @id @default(autoincrement())
  email String?

  business Business?
  category Category[]
  users    User[]

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Business {
  id               Int           @id @default(autoincrement())
  tenant           Tenant        @relation(fields: [tenant_id], references: [id])
  tenant_id        Int           @unique
  business_name    String?
  business_type    BusinessType?
  business_address String?
  country          String?

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Category {
  id             Int           @id @default(autoincrement())
  tenant         Tenant        @relation(fields: [tenant_id], references: [id])
  tenant_id      Int
  name           String
  description    String?
  sub_categories Subcategory[]

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Subcategory {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String
  last_login DateTime? @default(now())

  tenant_id  Int          @unique
  tenant     Tenant       @relation(fields: [tenant_id], references: [id])
  permission Permission[]

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}

model Permission {
  id Int @id @default(autoincrement())

  dashboard Boolean @default(false)
  inventory Boolean @default(false)
  sales     Boolean @default(false)
  expenses  Boolean @default(false)
  report    Boolean @default(false)
  customers Boolean @default(false)
  tenant_id Int
  userId    Int
  user_id   User    @relation(fields: [userId], references: [id])

  //
  is_active  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamptz(3)
  updated_at DateTime? @updatedAt
}
